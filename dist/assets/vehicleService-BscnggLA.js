import{a as e}from"./axiosConfig-kM0HH6AN.js";const t=new class{async getVehicles(){try{const{data:t}=await e.get("/vehicles");return this.formatVehiclesData(t)}catch(t){throw new Error("Impossible de récupérer la liste des véhicules")}}async getVehicleById(t){try{const{data:a}=await e.get(`/vehicles/${t}`);return this.formatVehicleData(a)}catch(a){throw new Error("Impossible de récupérer les détails du véhicule")}}async createVehicle(t){var a,r;try{const a=new FormData;if(Object.keys(t).forEach(e=>{"features"===e?a.append("features",JSON.stringify(t[e])):"images"!==e&&(Array.isArray(t[e])||"object"==typeof t[e]&&null!==t[e]?a.append(e,JSON.stringify(t[e])):a.append(e,t[e]))}),t.images&&t.images.length>0)for(let e=0;e<t.images.length;e++){const r=t.images[e];(r instanceof File||r instanceof Blob)&&a.append("images",r,r.name)}const{data:r}=await e.post("/vehicles",a,{headers:{"Content-Type":"multipart/form-data",Authorization:`Bearer ${localStorage.getItem("token")}`},transformRequest:(e,t)=>a});return this.formatVehicleData(r)}catch(i){throw new Error((null==(r=null==(a=i.response)?void 0:a.data)?void 0:r.message)||"Impossible de créer le véhicule")}}async updateVehicle(t,a){try{const r=new FormData;Object.keys(a).forEach(e=>{"images"!==e&&(Array.isArray(a[e])||"object"==typeof a[e]?r.append(e,JSON.stringify(a[e])):r.append(e,a[e]))}),a.images&&a.images.length>0&&a.images.forEach(e=>{r.append("images",e)});const{data:i}=await e.put(`/vehicles/${t}`,r,{headers:{"Content-Type":"multipart/form-data"}});return this.formatVehicleData(i)}catch(r){throw new Error("Impossible de mettre à jour le véhicule")}}async checkVehicleStatus(t){try{const{data:a}=await e.get(`/vehicles/${t}/status`);return{isRented:a.isRented,currentRental:a.currentRental,upcomingRentals:a.upcomingRentals,canBeDeleted:!a.isRented&&0===a.upcomingRentals.length}}catch(a){throw new Error("Impossible de vérifier le statut du véhicule")}}async deleteVehicle(t){var a,r;try{const a=await this.checkVehicleStatus(t);if(!a.canBeDeleted){if(a.isRented)throw new Error("Ce véhicule ne peut pas être supprimé car il est actuellement en location");if(a.upcomingRentals.length>0)throw new Error("Ce véhicule ne peut pas être supprimé car il a des locations à venir")}return await e.delete(`/vehicles/${t}`),!0}catch(i){throw new Error((null==(r=null==(a=i.response)?void 0:a.data)?void 0:r.message)||"Impossible de supprimer le véhicule")}}async archiveVehicle(t){try{const{data:a}=await e.patch(`/vehicles/${t}/archive`);return this.formatVehicleData(a)}catch(a){throw new Error("Impossible d'archiver le véhicule")}}async getVehicleHistory(t){try{const{data:a}=await e.get(`/vehicles/${t}/history`);return a.map(e=>({id:e.id,renterName:e.renterName,startDate:e.startDate,endDate:e.endDate,amount:e.amount,status:e.status}))}catch(a){throw new Error("Impossible de récupérer l'historique du véhicule")}}async checkAvailability(t,a,r){try{const{data:i}=await e.post(`/vehicles/${t}/check-availability`,{startDate:a,endDate:r});return i.available}catch(i){throw new Error("Impossible de vérifier la disponibilité du véhicule")}}formatVehiclesData(e){return e.map(e=>this.formatVehicleData(e))}formatVehicleData(e){return{_id:e._id,id:e._id,brand:e.brand,model:e.model,type:e.type,licensePlate:e.licensePlate,fuel:e.fuel,year:e.year,mileage:e.mileage,dailyRate:e.dailyRate,images:e.images||[],features:e.features||[],description:e.description,isAvailable:this.checkVehicleAvailability(e),isArchived:e.isArchived||!1,maintenanceHistory:e.maintenanceHistory||[],lastMaintenanceDate:e.lastMaintenanceDate,nextMaintenanceDate:e.nextMaintenanceDate}}checkVehicleAvailability(e){if(e.isArchived)return!1;if(!e.currentRental)return!0;const t=new Date;return new Date(e.currentRental.endDate)<t}};export{t as v};
